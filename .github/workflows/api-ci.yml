name: API CI/CD

on:
  push:
    branches: ["main"]
    paths:
      - "ai-matching-job-api/**"
  pull_request:
    paths:
      - "ai-matching-job-api/**"

concurrency:
  group: api-${{ github.ref }}
  cancel-in-progress: true

jobs:
  test:
    name: Run unit tests
    runs-on: ubuntu-latest

    defaults:
      run:
        working-directory: ai-matching-job-api

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.12"

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
          pip install -r requirements.dev.txt
        continue-on-error: false

      - name: Run test suite
        run: pytest

  build:
    name: Build Docker image
    runs-on: ubuntu-latest
    needs: test

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build image
        uses: docker/build-push-action@v6
        with:
          context: ./ai-matching-job-api
          file: ./ai-matching-job-api/Dockerfile
          push: false

  deploy:
    name: Deploy to Fly.io
    runs-on: ubuntu-latest
    needs: build
    if: github.ref == 'refs/heads/main'
    environment:
      name: production
    outputs:
      url: ${{ steps.status.outputs.url }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set Fly.io app name
        id: vars
        run: echo "app_name=${FLY_APP_NAME}" >> "$GITHUB_OUTPUT"
        env:
          FLY_APP_NAME: ${{ secrets.FLY_APP_NAME }}

      - name: Deploy with Flyctl
        id: deploy
        uses: superfly/flyctl-actions@v1
        with:
          args: "deploy --remote-only --config ai-matching-job-api/fly.toml --app ${{ steps.vars.outputs.app_name }} --image-label ${{ github.sha }}"
        env:
          FLY_API_TOKEN: ${{ secrets.FLY_API_TOKEN }}
          FLY_APP_NAME: ${{ steps.vars.outputs.app_name }}

      - name: Expose deployment URL
        id: status
        run: echo "url=https://${{ steps.vars.outputs.app_name }}.fly.dev" >> "$GITHUB_OUTPUT"
